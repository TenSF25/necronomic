/* ========================
   Navbar and Options Bar
   =========================
   The .options class defines the layout and background of the navigation bar.
   It's a flex container with horizontal direction and minimal height.
*/

.options {
  display: flex;
  flex-direction: row;
  height: 20px;
  width: 100%;
  margin: 0;
  padding: 0;
  background-color: rgb(236, 251, 254); /* Light background color */
  border-bottom: 1px solid black; /* Border separating navbar from content */
  color: #000;
  font-size: 13px; /* Font size for readability */
}

/* ========================
   Left container in Navbar
   =========================
   This container holds the options on the left side (e.g., select dropdown).
   It uses flexbox for distribution.
*/

.containerLeft {
  display: flex;
  flex-direction: row;
  justify-content: space-around;
}

/* ========================
   Styling for Select dropdown
   =========================
   Customizes the select dropdown appearance without the default styling.
   Ensures a consistent border and padding.
*/

.select {
  appearance: none; /* Removes default browser styles */
  background: none; /* Removes background */
  border-right: 1px solid black; /* Border separating from the next element */
  padding-left: 10px;
  padding-right: 10px;
  outline: none; /* Removes focus outline */
}

/* ========================
   Spacing and borders for links in navbar
   =========================
   Adds padding and border styling to space items out on the left side.
*/

.space {
  padding-left: 10px;
  padding-right: 10px;
  border-right: 1px solid black;
  border-left: none;
}

/* ========================
   Right container in Navbar
   =========================
   This container holds the icons and clock on the right side.
   It's pushed to the far right using margin-left:auto.
*/

.containerRight {
  display: flex;
  margin-left: auto;
}

/* ========================
   Displaying data in navbar
   =========================
   .data defines a flex container with items spaced evenly across the row.
*/

.data {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
}

/* ========================
   Styling for list items in navbar
   =========================
   Each list item gets padding and a left border for separation.
*/

.li {
  padding-left: 10px;
  padding-right: 10px;
  border-left: 1px solid black;
}

/* ========================
   Page Layout for Apps
   =========================
   .containerApps defines the layout of the apps area.
   The container is floated to the right, with gaps between items.
*/

.containerApps {
  display: flex;
  flex-direction: column;
  float: right; /* Floats the app container to the right */
  margin-top: 20px;
  gap: 30px;
  margin-right: 20px;
  cursor: url(./utils/click.svg), auto !important; /* Custom cursor for interaction */
}

/* ========================
   Layout for individual app items
   =========================
   .appItems is used to center each individual app with a gap between them.
*/

.appItems {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 10px;
}

/* ========================
   App window styling
   =========================
   .appWindow ensures the app window position is relative,
   allowing for proper stacking and positioning of elements within.
*/

.appWindow {
  width: auto;
  height: auto;
  position: relative;
}
